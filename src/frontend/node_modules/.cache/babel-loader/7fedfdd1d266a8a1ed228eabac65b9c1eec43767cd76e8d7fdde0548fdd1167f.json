{"ast":null,"code":"// auth.js - Enhanced Debug Version\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { getFirestore, doc, setDoc, getDoc, collection } from \"firebase/firestore\";\nimport { app } from './firebase';\n\n// Initialize Firebase Auth and Firestore with detailed logging\nconsole.log('🔧 Initializing Firebase Auth and Firestore...');\nconsole.log('📱 Firebase app:', app);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconsole.log('🔐 Auth instance:', auth);\nconsole.log('🗄️ Firestore instance:', db);\nconsole.log('🆔 Auth app name:', auth.app.name);\nconsole.log('🆔 Firestore app name:', db.app.name);\n\n// Sign up function with MAXIMUM debugging\nexport const signUpUser = async (email, password, firstName, lastName) => {\n  console.log('🚀 ========== STARTING SIGN UP PROCESS ==========');\n  console.log('📧 Email:', email);\n  console.log('👤 First Name:', firstName);\n  console.log('👤 Last Name:', lastName);\n  console.log('🔑 Password length:', password ? password.length : 'undefined');\n  try {\n    var _auth$currentUser, _auth$currentUser2;\n    // Step 1: Create user with email and password\n    console.log('📧 ========== STEP 1: Creating Firebase Auth User ==========');\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    console.log('✅ User created in Auth successfully!');\n    console.log('🆔 User UID:', user.uid);\n    console.log('📧 User email:', user.email);\n    console.log('🔐 User emailVerified:', user.emailVerified);\n    console.log('👤 Full user object:', user);\n\n    // Step 2: Update the user's display name\n    console.log('👤 ========== STEP 2: Updating Display Name ==========');\n    try {\n      await updateProfile(user, {\n        displayName: `${firstName} ${lastName}`\n      });\n      console.log('✅ Display name updated successfully');\n    } catch (profileError) {\n      console.error('⚠️ Display name update failed (but continuing):', profileError);\n    }\n\n    // Step 3: Test Firebase connection and configuration\n    console.log('🔍 ========== STEP 3: Testing Firebase Configuration ==========');\n    console.log('🔧 Firebase app config:', app.options);\n    console.log('🗄️ Firestore instance details:', {\n      app: db.app.name,\n      settings: db._settings || 'no settings'\n    });\n\n    // Step 4: Test authentication state\n    console.log('🔐 ========== STEP 4: Checking Auth State ==========');\n    console.log('🔐 Current auth user:', auth.currentUser);\n    console.log('🔐 Auth user UID:', (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid);\n    console.log('🔐 Auth user email:', (_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.email);\n\n    // Step 5: Prepare user data\n    console.log('📝 ========== STEP 5: Preparing User Data ==========');\n    const userData = {\n      uid: user.uid,\n      email: email.toLowerCase(),\n      firstName: firstName,\n      lastName: lastName,\n      displayName: `${firstName} ${lastName}`,\n      createdAt: new Date().toISOString(),\n      lastLoginAt: new Date().toISOString(),\n      preferences: {\n        notifications: true,\n        theme: 'light'\n      },\n      stats: {\n        videosGenerated: 0,\n        problemsSolved: 0\n      }\n    };\n    console.log('📄 User data prepared:', JSON.stringify(userData, null, 2));\n\n    // Step 6: Create document reference\n    console.log('📍 ========== STEP 6: Creating Document Reference ==========');\n    const userDocRef = doc(db, 'users', user.uid);\n    console.log('📍 Document reference:', userDocRef);\n    console.log('📍 Document path:', userDocRef.path);\n    console.log('📍 Collection ID:', userDocRef.parent.id);\n    console.log('📍 Document ID:', userDocRef.id);\n\n    // Step 7: Attempt to write to Firestore\n    console.log('💾 ========== STEP 7: Writing to Firestore ==========');\n    console.log('💾 About to call setDoc...');\n    try {\n      await setDoc(userDocRef, userData);\n      console.log('✅ ========== SUCCESS: Firestore document created! ==========');\n    } catch (firestoreError) {\n      console.error('❌ ========== FIRESTORE ERROR DETAILS ==========');\n      console.error('❌ Error name:', firestoreError.name);\n      console.error('❌ Error code:', firestoreError.code);\n      console.error('❌ Error message:', firestoreError.message);\n      console.error('❌ Error stack:', firestoreError.stack);\n      console.error('❌ Full error object:', firestoreError);\n\n      // Check if it's a permissions error\n      if (firestoreError.code === 'permission-denied') {\n        var _auth$currentUser3, _auth$currentUser4;\n        console.error('🚨 PERMISSION DENIED - Checking auth state...');\n        console.error('🔐 Current user during error:', auth.currentUser);\n        console.error('🔐 User UID during error:', (_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.uid);\n        console.error('🔐 User email verified:', (_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.emailVerified);\n      }\n      throw firestoreError; // Re-throw to be caught by outer try-catch\n    }\n    console.log('🎉 ========== SIGN UP COMPLETED SUCCESSFULLY ==========');\n    return {\n      success: true,\n      user: user,\n      message: 'Account created successfully!'\n    };\n  } catch (error) {\n    console.error('💥 ========== SIGN UP ERROR OCCURRED ==========');\n    console.error('💥 Error type:', typeof error);\n    console.error('💥 Error name:', error.name);\n    console.error('💥 Error code:', error.code);\n    console.error('💥 Error message:', error.message);\n    console.error('💥 Error stack:', error.stack);\n    console.error('💥 Full error object:', error);\n\n    // Additional debugging for specific error types\n    if (error.code) {\n      console.error('🔍 Error code analysis:');\n      switch (error.code) {\n        case 'permission-denied':\n          console.error('   🚨 This is a Firestore permissions error');\n          console.error('   🚨 Check your Firestore security rules');\n          console.error('   🚨 Make sure user is authenticated');\n          break;\n        case 'unavailable':\n          console.error('   🚨 Firestore service is unavailable');\n          console.error('   🚨 Check your internet connection');\n          break;\n        case 'not-found':\n          console.error('   🚨 Firestore database not found');\n          console.error('   🚨 Check your Firebase project configuration');\n          break;\n        case 'auth/email-already-in-use':\n          console.error('   🚨 Email is already registered');\n          break;\n        case 'auth/weak-password':\n          console.error('   🚨 Password is too weak');\n          break;\n        default:\n          console.error('   🚨 Unknown error code:', error.code);\n      }\n    }\n    return {\n      success: false,\n      error: error.code,\n      message: getErrorMessage(error.code) + ` (Debug: ${error.code})`\n    };\n  }\n};\n\n// Sign in function with enhanced debugging\nexport const signInUser = async (email, password) => {\n  console.log('🔑 ========== STARTING SIGN IN PROCESS ==========');\n  console.log('📧 Email:', email);\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    console.log('✅ User signed in successfully!');\n    console.log('🆔 User UID:', user.uid);\n\n    // Update last login time in Firestore\n    console.log('📅 Updating last login time...');\n    try {\n      const userDocRef = doc(db, 'users', user.uid);\n      await setDoc(userDocRef, {\n        lastLoginAt: new Date().toISOString()\n      }, {\n        merge: true\n      });\n      console.log('✅ Last login time updated');\n    } catch (updateError) {\n      console.error('⚠️ Failed to update last login time:', updateError);\n      // Don't fail the whole sign in for this\n    }\n    return {\n      success: true,\n      user: user,\n      message: 'Signed in successfully!'\n    };\n  } catch (error) {\n    console.error('❌ Sign in error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Sign out function\nexport const signOutUser = async () => {\n  console.log('🚪 Starting sign out...');\n  try {\n    await signOut(auth);\n    console.log('✅ User signed out successfully');\n    return {\n      success: true,\n      message: 'Signed out successfully!'\n    };\n  } catch (error) {\n    console.error('❌ Sign out error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: 'Error signing out. Please try again.'\n    };\n  }\n};\n\n// Get user data from Firestore with debugging\nexport const getUserData = async uid => {\n  console.log('📖 ========== GETTING USER DATA ==========');\n  console.log('🆔 Getting user data for UID:', uid);\n  try {\n    const userDocRef = doc(db, 'users', uid);\n    console.log('📍 Document reference:', userDocRef.path);\n    const userDoc = await getDoc(userDocRef);\n    console.log('📄 Document snapshot:', userDoc);\n    console.log('📄 Document exists:', userDoc.exists());\n    if (userDoc.exists()) {\n      const userData = userDoc.data();\n      console.log('✅ User data found:', userData);\n      return {\n        success: true,\n        userData: userData\n      };\n    } else {\n      console.log('❌ User document does not exist');\n      return {\n        success: false,\n        message: 'User data not found'\n      };\n    }\n  } catch (error) {\n    console.error('❌ Error getting user data:');\n    console.error('   Error code:', error.code);\n    console.error('   Error message:', error.message);\n    console.error('   Full error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: 'Error retrieving user data'\n    };\n  }\n};\n\n// Auth state observer\nexport const observeAuthState = callback => {\n  console.log('👁️ Setting up auth state observer...');\n  return onAuthStateChanged(auth, user => {\n    console.log('🔄 Auth state changed:', user ? `User: ${user.uid}` : 'No user');\n    callback(user);\n  });\n};\n\n// Enhanced error message function\nconst getErrorMessage = errorCode => {\n  console.log('🔍 Getting error message for code:', errorCode);\n  switch (errorCode) {\n    case 'auth/email-already-in-use':\n      return 'An account with this email already exists.';\n    case 'auth/weak-password':\n      return 'Password should be at least 6 characters long.';\n    case 'auth/invalid-email':\n      return 'Please enter a valid email address.';\n    case 'auth/user-not-found':\n      return 'No account found with this email address.';\n    case 'auth/wrong-password':\n      return 'Incorrect password. Please try again.';\n    case 'auth/too-many-requests':\n      return 'Too many failed attempts. Please try again later.';\n    case 'auth/network-request-failed':\n      return 'Network error. Please check your connection and try again.';\n    case 'auth/missing-auth-domain':\n      return 'Firebase configuration error. Check your auth domain.';\n    case 'permission-denied':\n      return 'Permission denied. Check your Firestore security rules.';\n    case 'unavailable':\n      return 'Firestore service is temporarily unavailable.';\n    case 'not-found':\n      return 'Firestore database not found. Check your Firebase configuration.';\n    default:\n      return `An error occurred: ${errorCode}. Please try again.`;\n  }\n};\n\n// Export auth instance for use in components\nexport { auth, db };","map":{"version":3,"names":["getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","getFirestore","doc","setDoc","getDoc","collection","app","console","log","auth","db","name","signUpUser","email","password","firstName","lastName","length","_auth$currentUser","_auth$currentUser2","userCredential","user","uid","emailVerified","displayName","profileError","error","options","settings","_settings","currentUser","userData","toLowerCase","createdAt","Date","toISOString","lastLoginAt","preferences","notifications","theme","stats","videosGenerated","problemsSolved","JSON","stringify","userDocRef","path","parent","id","firestoreError","code","message","stack","_auth$currentUser3","_auth$currentUser4","success","getErrorMessage","signInUser","merge","updateError","signOutUser","getUserData","userDoc","exists","data","observeAuthState","callback","errorCode"],"sources":["/Users/armanvossoughi/Developer/Magi/src/frontend/src/auth.js"],"sourcesContent":["// auth.js - Enhanced Debug Version\nimport { \n  getAuth, \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  updateProfile\n} from \"firebase/auth\";\nimport { \n  getFirestore, \n  doc, \n  setDoc, \n  getDoc, \n  collection \n} from \"firebase/firestore\";\nimport { app } from './firebase';\n\n// Initialize Firebase Auth and Firestore with detailed logging\nconsole.log('🔧 Initializing Firebase Auth and Firestore...');\nconsole.log('📱 Firebase app:', app);\n\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nconsole.log('🔐 Auth instance:', auth);\nconsole.log('🗄️ Firestore instance:', db);\nconsole.log('🆔 Auth app name:', auth.app.name);\nconsole.log('🆔 Firestore app name:', db.app.name);\n\n// Sign up function with MAXIMUM debugging\nexport const signUpUser = async (email, password, firstName, lastName) => {\n  console.log('🚀 ========== STARTING SIGN UP PROCESS ==========');\n  console.log('📧 Email:', email);\n  console.log('👤 First Name:', firstName);\n  console.log('👤 Last Name:', lastName);\n  console.log('🔑 Password length:', password ? password.length : 'undefined');\n  \n  try {\n    // Step 1: Create user with email and password\n    console.log('📧 ========== STEP 1: Creating Firebase Auth User ==========');\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    console.log('✅ User created in Auth successfully!');\n    console.log('🆔 User UID:', user.uid);\n    console.log('📧 User email:', user.email);\n    console.log('🔐 User emailVerified:', user.emailVerified);\n    console.log('👤 Full user object:', user);\n\n    // Step 2: Update the user's display name\n    console.log('👤 ========== STEP 2: Updating Display Name ==========');\n    try {\n      await updateProfile(user, {\n        displayName: `${firstName} ${lastName}`\n      });\n      console.log('✅ Display name updated successfully');\n    } catch (profileError) {\n      console.error('⚠️ Display name update failed (but continuing):', profileError);\n    }\n\n    // Step 3: Test Firebase connection and configuration\n    console.log('🔍 ========== STEP 3: Testing Firebase Configuration ==========');\n    console.log('🔧 Firebase app config:', app.options);\n    console.log('🗄️ Firestore instance details:', {\n      app: db.app.name,\n      settings: db._settings || 'no settings'\n    });\n\n    // Step 4: Test authentication state\n    console.log('🔐 ========== STEP 4: Checking Auth State ==========');\n    console.log('🔐 Current auth user:', auth.currentUser);\n    console.log('🔐 Auth user UID:', auth.currentUser?.uid);\n    console.log('🔐 Auth user email:', auth.currentUser?.email);\n    \n    // Step 5: Prepare user data\n    console.log('📝 ========== STEP 5: Preparing User Data ==========');\n    const userData = {\n      uid: user.uid,\n      email: email.toLowerCase(),\n      firstName: firstName,\n      lastName: lastName,\n      displayName: `${firstName} ${lastName}`,\n      createdAt: new Date().toISOString(),\n      lastLoginAt: new Date().toISOString(),\n      preferences: {\n        notifications: true,\n        theme: 'light'\n      },\n      stats: {\n        videosGenerated: 0,\n        problemsSolved: 0\n      }\n    };\n    \n    console.log('📄 User data prepared:', JSON.stringify(userData, null, 2));\n    \n    // Step 6: Create document reference\n    console.log('📍 ========== STEP 6: Creating Document Reference ==========');\n    const userDocRef = doc(db, 'users', user.uid);\n    console.log('📍 Document reference:', userDocRef);\n    console.log('📍 Document path:', userDocRef.path);\n    console.log('📍 Collection ID:', userDocRef.parent.id);\n    console.log('📍 Document ID:', userDocRef.id);\n    \n    // Step 7: Attempt to write to Firestore\n    console.log('💾 ========== STEP 7: Writing to Firestore ==========');\n    console.log('💾 About to call setDoc...');\n    \n    try {\n      await setDoc(userDocRef, userData);\n      console.log('✅ ========== SUCCESS: Firestore document created! ==========');\n    } catch (firestoreError) {\n      console.error('❌ ========== FIRESTORE ERROR DETAILS ==========');\n      console.error('❌ Error name:', firestoreError.name);\n      console.error('❌ Error code:', firestoreError.code);\n      console.error('❌ Error message:', firestoreError.message);\n      console.error('❌ Error stack:', firestoreError.stack);\n      console.error('❌ Full error object:', firestoreError);\n      \n      // Check if it's a permissions error\n      if (firestoreError.code === 'permission-denied') {\n        console.error('🚨 PERMISSION DENIED - Checking auth state...');\n        console.error('🔐 Current user during error:', auth.currentUser);\n        console.error('🔐 User UID during error:', auth.currentUser?.uid);\n        console.error('🔐 User email verified:', auth.currentUser?.emailVerified);\n      }\n      \n      throw firestoreError; // Re-throw to be caught by outer try-catch\n    }\n\n    console.log('🎉 ========== SIGN UP COMPLETED SUCCESSFULLY ==========');\n    return {\n      success: true,\n      user: user,\n      message: 'Account created successfully!'\n    };\n\n  } catch (error) {\n    console.error('💥 ========== SIGN UP ERROR OCCURRED ==========');\n    console.error('💥 Error type:', typeof error);\n    console.error('💥 Error name:', error.name);\n    console.error('💥 Error code:', error.code);\n    console.error('💥 Error message:', error.message);\n    console.error('💥 Error stack:', error.stack);\n    console.error('💥 Full error object:', error);\n    \n    // Additional debugging for specific error types\n    if (error.code) {\n      console.error('🔍 Error code analysis:');\n      switch (error.code) {\n        case 'permission-denied':\n          console.error('   🚨 This is a Firestore permissions error');\n          console.error('   🚨 Check your Firestore security rules');\n          console.error('   🚨 Make sure user is authenticated');\n          break;\n        case 'unavailable':\n          console.error('   🚨 Firestore service is unavailable');\n          console.error('   🚨 Check your internet connection');\n          break;\n        case 'not-found':\n          console.error('   🚨 Firestore database not found');\n          console.error('   🚨 Check your Firebase project configuration');\n          break;\n        case 'auth/email-already-in-use':\n          console.error('   🚨 Email is already registered');\n          break;\n        case 'auth/weak-password':\n          console.error('   🚨 Password is too weak');\n          break;\n        default:\n          console.error('   🚨 Unknown error code:', error.code);\n      }\n    }\n    \n    return {\n      success: false,\n      error: error.code,\n      message: getErrorMessage(error.code) + ` (Debug: ${error.code})`\n    };\n  }\n};\n\n// Sign in function with enhanced debugging\nexport const signInUser = async (email, password) => {\n  console.log('🔑 ========== STARTING SIGN IN PROCESS ==========');\n  console.log('📧 Email:', email);\n  \n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    console.log('✅ User signed in successfully!');\n    console.log('🆔 User UID:', user.uid);\n\n    // Update last login time in Firestore\n    console.log('📅 Updating last login time...');\n    try {\n      const userDocRef = doc(db, 'users', user.uid);\n      await setDoc(userDocRef, {\n        lastLoginAt: new Date().toISOString()\n      }, { merge: true });\n      console.log('✅ Last login time updated');\n    } catch (updateError) {\n      console.error('⚠️ Failed to update last login time:', updateError);\n      // Don't fail the whole sign in for this\n    }\n\n    return {\n      success: true,\n      user: user,\n      message: 'Signed in successfully!'\n    };\n  } catch (error) {\n    console.error('❌ Sign in error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Sign out function\nexport const signOutUser = async () => {\n  console.log('🚪 Starting sign out...');\n  try {\n    await signOut(auth);\n    console.log('✅ User signed out successfully');\n    return {\n      success: true,\n      message: 'Signed out successfully!'\n    };\n  } catch (error) {\n    console.error('❌ Sign out error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: 'Error signing out. Please try again.'\n    };\n  }\n};\n\n// Get user data from Firestore with debugging\nexport const getUserData = async (uid) => {\n  console.log('📖 ========== GETTING USER DATA ==========');\n  console.log('🆔 Getting user data for UID:', uid);\n  \n  try {\n    const userDocRef = doc(db, 'users', uid);\n    console.log('📍 Document reference:', userDocRef.path);\n    \n    const userDoc = await getDoc(userDocRef);\n    console.log('📄 Document snapshot:', userDoc);\n    console.log('📄 Document exists:', userDoc.exists());\n    \n    if (userDoc.exists()) {\n      const userData = userDoc.data();\n      console.log('✅ User data found:', userData);\n      return {\n        success: true,\n        userData: userData\n      };\n    } else {\n      console.log('❌ User document does not exist');\n      return {\n        success: false,\n        message: 'User data not found'\n      };\n    }\n  } catch (error) {\n    console.error('❌ Error getting user data:');\n    console.error('   Error code:', error.code);\n    console.error('   Error message:', error.message);\n    console.error('   Full error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: 'Error retrieving user data'\n    };\n  }\n};\n\n// Auth state observer\nexport const observeAuthState = (callback) => {\n  console.log('👁️ Setting up auth state observer...');\n  return onAuthStateChanged(auth, (user) => {\n    console.log('🔄 Auth state changed:', user ? `User: ${user.uid}` : 'No user');\n    callback(user);\n  });\n};\n\n// Enhanced error message function\nconst getErrorMessage = (errorCode) => {\n  console.log('🔍 Getting error message for code:', errorCode);\n  \n  switch (errorCode) {\n    case 'auth/email-already-in-use':\n      return 'An account with this email already exists.';\n    case 'auth/weak-password':\n      return 'Password should be at least 6 characters long.';\n    case 'auth/invalid-email':\n      return 'Please enter a valid email address.';\n    case 'auth/user-not-found':\n      return 'No account found with this email address.';\n    case 'auth/wrong-password':\n      return 'Incorrect password. Please try again.';\n    case 'auth/too-many-requests':\n      return 'Too many failed attempts. Please try again later.';\n    case 'auth/network-request-failed':\n      return 'Network error. Please check your connection and try again.';\n    case 'auth/missing-auth-domain':\n      return 'Firebase configuration error. Check your auth domain.';\n    case 'permission-denied':\n      return 'Permission denied. Check your Firestore security rules.';\n    case 'unavailable':\n      return 'Firestore service is temporarily unavailable.';\n    case 'not-found':\n      return 'Firestore database not found. Check your Firebase configuration.';\n    default:\n      return `An error occurred: ${errorCode}. Please try again.`;\n  }\n};\n\n// Export auth instance for use in components\nexport { auth, db };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
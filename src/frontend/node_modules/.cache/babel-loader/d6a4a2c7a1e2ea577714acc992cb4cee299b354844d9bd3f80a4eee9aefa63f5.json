{"ast":null,"code":"// auth.js\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { getFirestore, doc, setDoc, getDoc, collection } from \"firebase/firestore\";\nimport { app } from './firebase';\n\n// Initialize Firebase Auth and Firestore\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// Sign up function\nexport const signUpUser = async (email, password, firstName, lastName) => {\n  try {\n    // Create user with email and password\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Update the user's display name\n    await updateProfile(user, {\n      displayName: `${firstName} ${lastName}`\n    });\n\n    // Create user document in Firestore\n    await setDoc(doc(db, 'users', user.uid), {\n      uid: user.uid,\n      email: email.toLowerCase(),\n      firstName: firstName,\n      lastName: lastName,\n      displayName: `${firstName} ${lastName}`,\n      createdAt: new Date().toISOString(),\n      lastLoginAt: new Date().toISOString(),\n      // Add any additional user fields you want\n      preferences: {\n        notifications: true,\n        theme: 'light'\n      },\n      stats: {\n        videosGenerated: 0,\n        problemsSolved: 0\n      }\n    });\n    return {\n      success: true,\n      user: user,\n      message: 'Account created successfully!'\n    };\n  } catch (error) {\n    console.error('Sign up error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Sign in function\nexport const signInUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Update last login time in Firestore\n    const userDocRef = doc(db, 'users', user.uid);\n    await setDoc(userDocRef, {\n      lastLoginAt: new Date().toISOString()\n    }, {\n      merge: true\n    });\n    return {\n      success: true,\n      user: user,\n      message: 'Signed in successfully!'\n    };\n  } catch (error) {\n    console.error('Sign in error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Sign out function\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n    return {\n      success: true,\n      message: 'Signed out successfully!'\n    };\n  } catch (error) {\n    console.error('Sign out error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: 'Error signing out. Please try again.'\n    };\n  }\n};\n\n// Get user data from Firestore\nexport const getUserData = async uid => {\n  try {\n    const userDoc = await getDoc(doc(db, 'users', uid));\n    if (userDoc.exists()) {\n      return {\n        success: true,\n        userData: userDoc.data()\n      };\n    } else {\n      return {\n        success: false,\n        message: 'User data not found'\n      };\n    }\n  } catch (error) {\n    console.error('Error getting user data:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: 'Error retrieving user data'\n    };\n  }\n};\n\n// Auth state observer\nexport const observeAuthState = callback => {\n  return onAuthStateChanged(auth, callback);\n};\n\n// Helper function to get user-friendly error messages\nconst getErrorMessage = errorCode => {\n  switch (errorCode) {\n    case 'auth/email-already-in-use':\n      return 'An account with this email already exists.';\n    case 'auth/weak-password':\n      return 'Password should be at least 6 characters long.';\n    case 'auth/invalid-email':\n      return 'Please enter a valid email address.';\n    case 'auth/user-not-found':\n      return 'No account found with this email address.';\n    case 'auth/wrong-password':\n      return 'Incorrect password. Please try again.';\n    case 'auth/too-many-requests':\n      return 'Too many failed attempts. Please try again later.';\n    case 'auth/network-request-failed':\n      return 'Network error. Please check your connection and try again.';\n    default:\n      return 'An error occurred. Please try again.';\n  }\n};\n\n// Export auth instance for use in components\nexport { auth, db };","map":{"version":3,"names":["getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","getFirestore","doc","setDoc","getDoc","collection","app","auth","db","signUpUser","email","password","firstName","lastName","userCredential","user","displayName","uid","toLowerCase","createdAt","Date","toISOString","lastLoginAt","preferences","notifications","theme","stats","videosGenerated","problemsSolved","success","message","error","console","code","getErrorMessage","signInUser","userDocRef","merge","signOutUser","getUserData","userDoc","exists","userData","data","observeAuthState","callback","errorCode"],"sources":["/Users/armanvossoughi/Developer/Magi/src/frontend/src/auth.js"],"sourcesContent":["// auth.js\nimport { \n  getAuth, \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  updateProfile\n} from \"firebase/auth\";\nimport { \n  getFirestore, \n  doc, \n  setDoc, \n  getDoc, \n  collection \n} from \"firebase/firestore\";\nimport { app } from './firebase';\n\n// Initialize Firebase Auth and Firestore\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\n// Sign up function\nexport const signUpUser = async (email, password, firstName, lastName) => {\n  try {\n    // Create user with email and password\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Update the user's display name\n    await updateProfile(user, {\n      displayName: `${firstName} ${lastName}`\n    });\n\n    // Create user document in Firestore\n    await setDoc(doc(db, 'users', user.uid), {\n      uid: user.uid,\n      email: email.toLowerCase(),\n      firstName: firstName,\n      lastName: lastName,\n      displayName: `${firstName} ${lastName}`,\n      createdAt: new Date().toISOString(),\n      lastLoginAt: new Date().toISOString(),\n      // Add any additional user fields you want\n      preferences: {\n        notifications: true,\n        theme: 'light'\n      },\n      stats: {\n        videosGenerated: 0,\n        problemsSolved: 0\n      }\n    });\n\n    return {\n      success: true,\n      user: user,\n      message: 'Account created successfully!'\n    };\n  } catch (error) {\n    console.error('Sign up error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Sign in function\nexport const signInUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n\n    // Update last login time in Firestore\n    const userDocRef = doc(db, 'users', user.uid);\n    await setDoc(userDocRef, {\n      lastLoginAt: new Date().toISOString()\n    }, { merge: true });\n\n    return {\n      success: true,\n      user: user,\n      message: 'Signed in successfully!'\n    };\n  } catch (error) {\n    console.error('Sign in error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: getErrorMessage(error.code)\n    };\n  }\n};\n\n// Sign out function\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n    return {\n      success: true,\n      message: 'Signed out successfully!'\n    };\n  } catch (error) {\n    console.error('Sign out error:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: 'Error signing out. Please try again.'\n    };\n  }\n};\n\n// Get user data from Firestore\nexport const getUserData = async (uid) => {\n  try {\n    const userDoc = await getDoc(doc(db, 'users', uid));\n    if (userDoc.exists()) {\n      return {\n        success: true,\n        userData: userDoc.data()\n      };\n    } else {\n      return {\n        success: false,\n        message: 'User data not found'\n      };\n    }\n  } catch (error) {\n    console.error('Error getting user data:', error);\n    return {\n      success: false,\n      error: error.code,\n      message: 'Error retrieving user data'\n    };\n  }\n};\n\n// Auth state observer\nexport const observeAuthState = (callback) => {\n  return onAuthStateChanged(auth, callback);\n};\n\n// Helper function to get user-friendly error messages\nconst getErrorMessage = (errorCode) => {\n  switch (errorCode) {\n    case 'auth/email-already-in-use':\n      return 'An account with this email already exists.';\n    case 'auth/weak-password':\n      return 'Password should be at least 6 characters long.';\n    case 'auth/invalid-email':\n      return 'Please enter a valid email address.';\n    case 'auth/user-not-found':\n      return 'No account found with this email address.';\n    case 'auth/wrong-password':\n      return 'Incorrect password. Please try again.';\n    case 'auth/too-many-requests':\n      return 'Too many failed attempts. Please try again later.';\n    case 'auth/network-request-failed':\n      return 'Network error. Please check your connection and try again.';\n    default:\n      return 'An error occurred. Please try again.';\n  }\n};\n\n// Export auth instance for use in components\nexport { auth, db };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}